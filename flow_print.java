// Author   : Aqdas Ahmad Khan
// Date     : 28/10/2019
// Purpose  : Print string in a unique way
import java.io.*;
import java.util.*;
class flow_print
{
	void render(String str,char cc)
	{
		str=str.toUpperCase();
		int I,i,j=0,l,k,ii,a,t=0;
		//Even indices have '*' and odd indices have ' ' (space)
		int A[][]={
		{							//space
		0,2,-1,
		0,2,-1,
		0,2,-1,
		0,2,-1,
		0,2,-1,
		0,2,-1,
		0,2,-1,-2
		},
		{							//!
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,3,-1,
		0,1,1,1,-1,-2
		},
		{							//"
		0,2,1,2,1,1,-1,
		0,1,1,2,1,2,-1,
		0,1,2,1,2,1,-1,
		0,1,2,1,2,1,-1,
		0,7,-1,
		0,7,-1,
		0,7,-1,-2
		},
		{							//#
		0,1,1,3,1,1,-1,
		7,-1,
		0,1,1,3,1,1,-1,
		0,1,1,3,1,1,-1,
		0,1,1,3,1,1,-1,
		7,-1,
		0,1,1,3,1,1,-1,-2
		},
		{							//$
		0,3,1,3,-1,
		0,1,6,-1,
		1,2,1,3,-1,
		0,1,5,1,-1,
		0,3,1,2,1,-1,
		6,1,-1,
		0,3,1,3,-1,-2
		},	
		{							//%
		0,6,1,-1,
		0,1,2,2,1,1,-1,
		0,4,1,2,-1,
		0,3,1,3,-1,
		0,2,1,4,-1,
		0,1,1,3,2,-1,
		1,6,-1,-2
		},
		{							//&
		0,3,3,6,-1,
		0,2,1,3,1,5,-1,
		0,3,2,7,-1,
		0,1,1,3,1,3,1,2,-1,
		1,6,1,4,-1,
		0,1,1,4,1,2,1,2,-1,
		0,2,3,6,1,-1,-2
		},
		{							//'
		0,2,1,1,-1,
		0,1,1,2,-1,
		0,1,2,1,-1,
		0,1,2,1,-1,
		0,4,-1,
		0,4,-1,
		0,4,-1,-2
		},
		{							//(
		0,2,1,-1,
		0,1,1,1,-1,
		1,2,-1,
		1,2,-1,
		1,2,-1,
		0,1,1,1,-1,
		0,2,1,-1,-2
		},
		{							//)
		1,2,-1,
		0,1,1,1,-1,
		0,2,1,-1,
		0,2,1,-1,
		0,2,1,-1,
		0,1,1,1,-1,
		1,2,-1,-2
		},
		{							//*
		1,5,1,5,1,-1,
		0,2,1,3,1,3,1,2,-1,
		0,4,1,1,1,1,1,4,-1,
		0,6,1,6,-1,
		0,4,1,1,1,1,1,4,-1,
		0,2,1,3,1,3,1,2,-1,
		1,5,1,5,1,-1,-2
		},
		{							//+
		0,7,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		7,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,7,-1,-2
		},
		{							//,
		0,4,-1,
		0,4,-1,
		0,4,-1,
		0,1,2,1,-1,
		0,1,2,1,-1,
		0,2,1,1,-1,
		0,1,1,2,-1,-2
		},
		{							//-
		0,6,-1,
		0,6,-1,
		0,6,-1,
		6,-1,
		0,6,-1,
		0,6,-1,
		0,6,-1,-2
		},
		{							//.
		0,4,-1,
		0,4,-1,
		0,4,-1,
		0,4,-1,
		0,1,2,1,-1,
		0,1,2,1,-1,
		0,4,-1,-2
		},
		{							// /
		0,6,1,-1,
		0,5,1,1,-1,
		0,4,1,2,-1,
		0,3,1,3,-1,
		0,2,1,4,-1,
		0,1,1,5,-1,
		1,6,-1,-2
		},
		{							//0
		0,1,5,1,-1,
		1,4,2,-1,
		1,3,1,1,1,-1,
		1,2,1,2,1,-1,
		1,1,1,3,1,-1,
		2,4,1,-1,
		0,1,5,1,-1,-2
		},
		{							//1
		0,1,2,4,-1,
		1,1,1,4,-1,
		0,2,1,4,-1,
		0,2,1,4,-1,
		0,2,1,4,-1,
		0,2,1,4,-1,
		5,2,-1,-2
		},
		{							//2
		0,1,5,1,-1,
		1,5,1,-1,
		0,6,1,-1,
		0,5,1,1,-1,
		0,3,1,3,-1,
		0,1,1,5,-1,
		7,-1,-2
		},
		{							//3
		7,-1,
		0,5,1,1,-1,
		0,4,1,2,-1,
		0,3,3,1,-1,
		0,6,1,-1,
		1,5,1,-1,
		0,1,5,1,-1,-2
		},
		{							//4
		0,4,1,2,-1,
		0,3,1,3,-1,
		0,2,1,4,-1,
		0,1,1,3,1,1,-1,
		7,-1,
		0,5,1,1,-1,
		0,5,1,1,-1,-2
		},
		{							//5
		7,-1,
		1,6,-1,
		1,6,-1,
		0,1,1,1,1,1,1,1,-1,
		0,6,1,-1,
		0,6,1,-1,
		1,1,1,1,1,2,-1,-2
		},
		{							//6
		0,1,5,1,-1,
		1,5,1,-1,
		1,6,-1,
		6,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		0,1,5,1,-1,-2
		},
		{							//7
		7,-1,
		0,5,1,1,-1,
		0,4,1,2,-1,
		0,1,1,1,1,1,1,1,-1,
		0,2,1,4,-1,
		0,1,1,5,-1,
		1,6,-1,-2
		},
		{							//8
		0,2,1,1,1,2,-1,
		1,5,1,-1,
		0,1,1,3,1,1,-1,
		0,2,3,2,-1,
		1,5,1,-1,
		1,5,1,-1,
		0,2,1,1,1,2,-1,-2
		},
		{							//9
		0,1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		0,1,6,-1,
		0,6,1,-1,
		1,5,1,-1,
		0,1,5,1,-1,-2
		},
		{							//:
		0,4,-1,
		0,4,-1,
		0,1,2,1,-1,
		0,4,-1,
		0,1,2,1,-1,
		0,4,-1,
		0,4,-1,-2
		},
		{							//;
		0,4,-1,
		0,4,-1,
		0,1,2,1,-1,
		0,4,-1,
		0,1,2,1,-1,
		0,2,1,1,-1,
		0,1,1,2,-1,-2
		},
		{							//<
		0,6,1,-1,
		0,4,1,2,-1,
		0,2,1,4,-1,
		1,6,-1,
		0,2,1,4,-1,
		0,4,1,2,-1,
		0,6,1,-1,-2
		},
		{							//=
		0,6,-1,
		0,6,-1,
		6,-1,
		0,6,-1,
		6,-1,
		0,6,-1,
		0,6,-1,-2
		},
		{							//>
		1,6,-1,
		0,2,1,4,-1,
		0,4,1,2,-1,
		0,6,1,-1,
		0,4,1,2,-1,
		0,2,1,4,-1,
		1,6,-1,-2
		},
		{							//?
		0,1,5,1,-1,
		1,5,1,-1,
		0,5,1,1,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,7,-1,
		0,3,1,3,-1,-2
		},
		{							//@
		0,4,4,4,-1,
		0,1,1,8,1,1,-1,
		1,3,4,3,1,-1,
		1,2,1,4,1,2,1,-1,
		1,2,1,3,2,2,1,-1,
		0,1,1,2,3,2,2,1,-1,
		0,2,1,9,-1,-1,-2
		},
		{							//A
		0,3,1,3,-1,
		0,2,1,1,1,2,-1,
		0,1,1,3,1,1,-1,
		1,1,3,1,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,-2
		},
		{							//B
		6,1,-1,
		0,1,1,4,1,-1,
		0,1,1,4,1,-1,
		0,1,5,1,-1,
		0,1,1,4,1,-1,
		0,1,1,4,1,-1,
		6,1,-1,-2
		},
		{							//C
		0,1,6,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,
		0,1,6,-1,-2
		},
		{							//D
		6,1,-1,
		0,1,1,4,1,-1,
		0,1,1,4,1,-1,
		0,1,1,4,1,-1,
		0,1,1,4,1,-1,
		0,1,1,4,1,-1,
		6,1,-1,-2
		},
		{							//E
		7,-1,
		1,6,-1,
		1,6,-1,
		4,3,-1,
		1,6,-1,
		1,6,-1,
		7,-1,-2
		},
		{							//F
		7,-1,
		1,6,-1,
		1,6,-1,
		4,3,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,-2
		},
		{							//G
		0,1,5,1,-1,
		1,5,1,-1,
		1,6,-1,
		1,6,-1,
		1,3,3,-1,
		1,5,1,-1,
		0,1,5,1,-1,-2
		},
		{							//H
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		7,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,-2
		},
		{							//I
		7,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		7,-1,-2
		},
		{							//J
		7,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		1,2,1,3,-1,
		1,2,1,3,-1,
		0,2,1,4,-1,-2
		},
		{							//K
		1,5,1,-1,
		1,3,1,2,-1,
		1,1,1,4,-1,
		2,5,-1,
		1,1,1,4,-1,
		1,3,1,2,-1,
		1,5,1,-1,-2
		},
		{							//L
		1,6,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,
		0,1,6,-1,-2
		},
		{							//M
		1,5,1,-1,
		2,3,2,-1,
		1,1,1,1,1,1,1,-1,
		1,2,1,2,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,-2
		},
		{							//N
		1,5,1,-1,
		2,4,1,-1,
		1,1,1,3,1,-1,
		1,2,1,2,1,-1,
		1,3,1,1,1,-1,
		1,4,2,-1,
		1,5,1,-1,-2
		},
		{							//O
		0,1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		0,1,5,1,-1,-2
		},
		{							//P
		6,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		6,1,-1,
		1,6,-1,
		1,6,-1,
		1,6,-1,-2
		},
		{							//Q
		0,1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		0,1,3,1,1,1,-1,
		0,6,1,-1,-2
		},
		{							//R
		6,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		6,1,-1,
		1,2,1,3,-1,
		1,3,1,2,-1,
		1,5,1,-1,-2
		},
		{							//S
		0,1,6,-1,
		1,6,-1,
		1,6,-1,
		0,1,5,1,-1,
		0,6,1,-1,
		0,6,1,-1,
		6,1,-1,-2
		},
		{							//T
		7,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,-2
		},
		{							//U
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		0,1,5,1,-1,-2
		},
		{							//V
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		0,1,1,3,1,1,-1,
		0,2,1,1,1,2,-1,
		0,3,1,3,-1,-2
		},
		{							//W
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,5,1,-1,
		1,2,1,2,1,-1,
		1,2,1,2,1,-1,
		0,1,2,1,2,1,-1,-2
		},
		{							//X
		1,5,1,-1,
		0,1,1,3,1,1,-1,
		0,2,1,1,1,2,-1,
		0,3,1,3,-1,
		0,2,1,1,1,2,-1,
		0,1,1,3,1,1,-1,
		1,5,1,-1,-2
		},
		{							//Y
		1,5,1,-1,
		1,5,1,-1,
		0,1,1,3,1,1,-1,
		0,2,1,1,1,2,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,
		0,3,1,3,-1,-2
		},
		{							//Z
		7,-1,
		0,5,1,1,-1,
		0,4,1,2,-1,
		0,3,1,3,-1,
		0,2,1,4,-1,
		0,1,1,5,-1,
		7,-1,-2
		},
		{								//[
		3,-1,
		1,2,-1,
		1,2,-1,
		1,2,-1,
		1,2,-1,
		1,2,-1,
		3,-1,-2
		},
		{								// \
		1,6,-1,
		0,1,1,5,-1,
		0,2,1,4,-1,
		0,3,1,3,-1,
		0,4,1,2,-1,
		0,5,1,1,-1,
		0,6,1,-1,-2
		},
		{								//]
		3,-1,
		0,2,1,-1,
		0,2,1,-1,
		0,2,1,-1,
		0,2,1,-1,
		0,2,1,-1,
		3,-1,-2
		},
		{								//^
		0,4,2,4,-1,
		0,2,2,2,2,2,-1,
		2,6,2,-1,
		0,10,-1,
		0,10,-1,
		0,10,-1,
		0,10,-1,-2
		},
		{								//_
		0,7,-1,
		0,7,-1,
		0,7,-1,
		0,7,-1,
		0,7,-1,
		0,7,-1,
		7,-1,-2
		},
		{								//`
		0,1,2,4,-1,
		0,3,2,2,-1,
		0,5,2,-1,
		0,7,-1,
		0,7,-1,
		0,7,-1,
		0,7,-1,-2
		},
		{								//{
		0,3,3,-1,
		0,2,1,3,-1,
		0,2,1,3,-1,
		1,5,-1,
		0,2,1,3,-1,
		0,2,1,3,-1,
		0,3,3,-1,-2
		},
		{								// |
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,
		0,1,1,1,-1,-2
		},
		{								//}
		3,3,-1,
		0,3,1,2,-1,
		0,3,1,2,-1,
		0,5,1,-1,
		0,3,1,2,-1,
		0,3,1,2,-1,
		3,3,-1,-2
		},
		{								//~
		0,13,-1,
		0,13,-1,
		0,2,3,8,-1,
		1,5,1,5,1,-1,
		0,8,3,2,-1,
		0,13,-1,
		0,13,-1,-2
		}
		};	
			
			
			
			
			
			
			
			
			
			
			
		for(I=0;I<7;I++)
		{
			System.out.print("  ");
			for(i=0;i<str.length();i++)
			{
				a=(int)str.charAt(i);
				a=a-32;
				if(a>=91&&a<=94)
					a=a-26;
				l=0;
				k=0;
				if(a>=0&&a<=68)
				{
					t++;
					for(j=0;A[a][j]!=-2;j++)
					{
						if (A[a][j]==-1)
						{
							l++;
							k=0;
						}
						else if(l==I)
						{
							for(ii=0;ii<A[a][j];ii++)
							{
								//for delay in printing
								try
								{
									Thread.sleep(2);
								}
								catch(Exception e)
								{
									for(int m=1;m<=1000000;m++);
								}
								if(k%2==0)
								{
									System.out.print(cc);
								}
								if(k%2!=0)
								{
									System.out.print(" ");
								}
							}
							k++;
						}
					}
				}
				System.out.print("  ");
			}
			System.out.println();
		}
		if(t==0)
			render("invalid",cc);
	}
	void credit()
	{
		System.out.println();
		System.out.println();
		System.out.println("					oooooooooooooooooooooooooooooooooooooooooooooooooooooo");
		System.out.println("					o                                                    o");
		System.out.println("					o  Developed by - Aqdas Ahmad Khan & Deepansh Dubey  o");
		System.out.println("					o                                                    o");
		System.out.println("					oooooooooooooooooooooooooooooooooooooooooooooooooooooo");
		System.out.println();
	}
	public static void main(String args[])throws IOException
	{
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String str,st;
		char cc;
		flow_print ob = new flow_print();
		while(true)
		{
			System.out.println("Input your name or \"//\" to exit");
			str=br.readLine();
			if(str.equals("//"))
				break;
			System.out.println("Input a character");
			st=br.readLine();
			if(st.length()!=0)
				cc=st.charAt(0);
			else
				cc='o';
			System.out.println();
			ob.render(str,cc);
			System.out.println();
		}
		ob.credit();
	}
}